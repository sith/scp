/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.tnt.scp.ide.topcomponents;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.util.Lookup;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;
import org.tnt.scp.common.generated.Id;
import org.tnt.scp.ide.panels.ScenesPanel;
import org.tnt.scp.uiservices.events.ScriptSelectedEvent;
import org.tnt.scp.uiservices.service.EventSystemService;
import org.tnt.scp.uiservices.service.GlobalContext;
import org.tnt.scp.uiservices.service.SystemEventListener;

import java.awt.*;
import java.util.HashMap;
import java.util.Map;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.tnt.scp.ide.topcomponents//Scenes//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "ScenesTopComponent",
        iconBase = "org/tnt/scp/ide/topcomponents/scenes_folder.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "leftSlidingSide", openAtStartup = true)
@ActionID(category = "Window", id = "org.tnt.scp.ide.topcomponents.ScenesTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ScenesAction",
        preferredID = "ScenesTopComponent")
@Messages({
        "CTL_ScenesAction=Scenes",
        "CTL_ScenesTopComponent=Scenes",
        "HINT_ScenesTopComponent=This is a Scenes window"
})
public final class ScenesTopComponent extends TopComponent implements ExplorerManager.Provider {
    private final Map<Id, ScenesPanel> scenePanels = new HashMap<Id, ScenesPanel>();
    private ExplorerManager explorerManager = new ExplorerManager();
    private BorderLayout mainPanelLayout;

    public ScenesTopComponent() {
        initComponents();
        setName(Bundle.CTL_ScenesTopComponent());
        setToolTipText(Bundle.HINT_ScenesTopComponent());
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        final GlobalContext.AwareService globalContextAware =
                Lookup.getDefault().lookup(GlobalContext.AwareService.class);

        final EventSystemService.SubscriberService subscriberService = Lookup.getDefault().lookup(EventSystemService.SubscriberService.class);
        subscriberService.subscribeScriptSelectedEvent(new SystemEventListener<ScriptSelectedEvent>() {
            @Override
            public void onEvent(ScriptSelectedEvent event) {
                Id id = event.getTarget().getId();
                ScenesPanel scenesPanel = scenePanels.get(id);
                if (scenesPanel == null) {
                    scenesPanel = new ScenesPanel(globalContextAware.findScriptContext(id));
                    scenesPanel.setVisible(true);
                    scenePanels.put(id, scenesPanel);
                }
                mainPanel.removeAll();

                mainPanel.add(scenesPanel, 0);
                mainPanel.updateUI();

            }
        });


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();

        mainPanelLayout = new BorderLayout();
        mainPanel.setLayout(mainPanelLayout);


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mainPanel;

    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }
}
