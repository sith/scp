/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.tnt.scp.ide.panels;

import com.google.common.collect.Lists;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.ListView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.nodes.Node;
import org.openide.util.Lookup;
import org.tnt.scp.ide.nodes.SceneNode;
import org.tnt.scp.uiservices.events.AddSceneEvent;
import org.tnt.scp.uiservices.service.EventSystemService;
import org.tnt.scp.uiservices.service.GlobalContext;
import org.tnt.scp.uiservices.service.SystemEventListener;
import org.tnt.scp.uiservices.context.SceneContext;
import org.tnt.scp.uiservices.context.ScriptContext;

import javax.swing.*;
import java.util.Collection;

/**
 * @author sith
 */
public class ScenesPanel extends javax.swing.JPanel implements ExplorerManager.Provider {

    private ExplorerManager explorerManager = new ExplorerManager();

    /**
     * Creates new form ScenesPanel
     */
    public ScenesPanel(final ScriptContext scriptContext) {
        initComponents();
        Collection<Node> scenes = Lists.newArrayList();
        for (SceneContext scene : scriptContext.getSceneContexts()) {
            SceneNode sceneNode = new SceneNode(scene);
            scenes.add(sceneNode);
        }

        Children.Array children = new Children.Array();
        children.add(scenes.toArray(new Node[scenes.size()]));
        explorerManager.setRootContext(new AbstractNode(children));

        final EventSystemService.SubscriberService subscriberService =
                Lookup.getDefault().lookup(EventSystemService.SubscriberService.class);

        subscriberService.subscribeAddSceneEvent(new SystemEventListener<AddSceneEvent>() {
            @Override
            public void onEvent(AddSceneEvent event) {

                if (!scriptContext.getScript().getId().equals(event.getTarget().getScriptRef())) {
                    return;
                }
                explorerManager.getRootContext().getChildren().add(
                        new Node[]{
                                new SceneNode(scriptContext.getSceneContextById(event.getTarget().getId()))
                        });

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scenesToolbar = new javax.swing.JToolBar();
        scenesPane = createScenesPane();

        scenesToolbar.setRollover(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(scenesToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                        .addComponent(scenesPane)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(scenesToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scenesPane, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scenesPane;
    private javax.swing.JToolBar scenesToolbar;
    // End of variables declaration//GEN-END:variables

    private JScrollPane createScenesPane() {
        ListView listView = new ListView();
        listView.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        return listView;
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }
}
